openapi: 3.0.3
info:
  title: Trails42
  version: 1.0.0
servers:
  - url: https://localhost:80/api/v1
tags:
  - name: auth
    description: Регистрация и авторизация пользователей
  - name: places
    description: Достопримечательности
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Авторизация
      description: Авторизация по логину и паролю.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'

      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Неправильный пароль или почта
        '400':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/AuthError'
               
  /auth/registr:
    post:
      tags:
        - auth
      summary: Регистрация
      description: Регистрация по логину и паролю.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'

      responses:
        '201':
          description: Успешная регистрация
        '400':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/AuthError'
  
  /places:
    get:
      tags:
        - places
      summary: Получение всех достопримечательностей
      security:
        - bearerAuth: [] 
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/Places'
        '401':
          description: Невалидный токен
          
  /places/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Получение достопримечательности
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/Place'
        '401':
          description: Невалидный токен
        '404':
          description: Невалидный id
  /places/{id}/comments:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
        - name: pageIndex
          in: query
          required: false
          schema:
            type: number
      tags:
        - places
      summary: Получение комментариев к достопримечательности
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/Comments'
        '401':
          description: Невалидный токен
        '404':
          description: Невалидный id
  /places/{id}/rate:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Оценка 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/Comments'
        '401':
          description: Невалидный токен
        '404':
          description: Невалидный id
                
  

components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthInfo:
      type: object
      properties:
        email:
          type: string
          example: "pochta@gmail.com"
        password:
          type: string
          example: "*******************"
    AuthError:
      type: object
      properties:
        errors: 
          type: object
          properties:
            email:
              type: string
              example: "Поле email должно быть строкой"
            password:
              type: string
              example: "Поле password должно быть строкой"
    User:
      type: object
      properties:
        data:
          type: object
          properties:
            access_token: 
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    Places:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example: 12
              title:
                type: string
                example: "Парк Ангелов"
              lat:
                type: number
                example: 12345.65
              lon:
                type: number
                example: 98983.34
              rate:
                type: number
                example: 4.5
              image:
                type: object
                properties:
                  id:
                    type: integer
                    example: 34
                  path:
                    type: string
                    example: "images/LKJkljg33POJB123oij.jpeg"
              locality:
                type: object
                properties:
                  id:
                    type: integer
                    example: 60
                  title:
                    type: string
                    example: "Кемерово"
    Place:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example: 12
              title:
                type: string
                example: "Парк Ангелов"
              lat:
                type: number
                example: 12345.65
              lon:
                type: number
                example: 98983.34
              rate:
                type: number
                example: 4.5
              description:
                type: string
                example: "Одно из прекраснейших мест города Кемерово..."
              images:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 34
                    path:
                      type: string
                      example: "images/LKJkljg33POJB123oij.jpeg"
              locality:
                type: object
                properties:
                  id:
                    type: integer
                    example: 60
                  title:
                    type: string
                    example: "Кемерово"
    Comments:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example: 55
              comment:
                type: string
                example: "Крутое место"
              created_at:
                type: string
                example: "2023-10-01 11:16:54"
              author:
                type: object
                properties:
                  id:
                    type: integer
                    example: 24
                  username:
                    type: string
                    example: "Юрий Константинопольский"
                  avatar:
                    type: string
                    example: "image/default.jpeg"
    