openapi: 3.0.3
info:
  title: MoreWay
  version: 1.0.0
servers:
  - url: https://localhost:80/api/v1
tags:
  - name: auth
    description: Регистрация и авторизация
  - name: places
    description: Достопримечательности
  - name: routes
    description: Маршруты
  - name: users
    description: Пользователи
  - name: chats
    description: Чаты

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Авторизация
      description: Авторизация по логину и паролю.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
        '401':
          description: Неправильный пароль или почта
        '400':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/AuthError'
               
  /auth/registr:
    post:
      tags:
        - auth
      summary: Регистрация
      description: Регистрация по логину и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'

      responses:
        '201':
          description: Успешная регистрация
        '400':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/AuthError'
  
  /auth/logout:
    post:
      tags:
        - auth
      summary: Выход из системы
      security:
        - bearerAuth: []
      description: Разлогинить авторизованного пользователя
      responses:
        '204':
          description: Успешный выход из системы
        '401':
          description: Невалидный токен
  
  /places:
    get:
      parameters:
        - name: lat
          in: query
          required: true
          schema:
            type: number
        - name: lon
          in: query
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
      tags:
        - places
      summary: Получение списка всех достопримечательностей, доступных в системе
      security:
        - bearerAuth: [] 
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlaces'
        '401':
          description: Невалидный токен
          
  /places/{placeId}:
    get:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Получение подробной информации о достопримечательности по ее идентификатору
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlace'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    
    post:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Добавление достопримечательности в систему
      description: Это действие доступно только модератору
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPlace'
      responses:
        '200':
          description: Успешное добавление достопримечательности
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlace'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    
    patch:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Изменение данных достопримечательности
      description: Это действие доступно только модератору
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPlace'
      responses:
        '200':
          description: Успешное изменение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlace'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные

    delete:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Удаление достопримечательности из системы
      description: Это действие доступно только модератору
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление данных
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
          
  /places/{placeId}/comments:
    get:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - places
      summary: Получение списка комментариев к достопримечательности
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetComments'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные

    post:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Добавление комментария к достопримечательности
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostComment'
      responses:
        '201':
          description: Успешное добавление комментария
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetComment'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
          
  /places/{placeId}/rating:
    post:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Добавление оценки достопримечательности 
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRating'
      responses:
        '201':
          description: Рейтинг был успешно добавлен
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  /routes:
    get:
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: number
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
      tags:
        - routes
      summary: Получение списка всех маршрутов, доступных в системе 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
    post:
      tags:
        - routes
      summary: Создание маршрута 
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRoute'
      responses:
        '201':
          description: Успешное создание маршрута
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
  
  /routes/{routeId}:
    get:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Получение полной информации о маршруте по его идентификатору
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    # patch:
    #   parameters:
    #     - name: routeId
    #       in: path
    #       required: true
    #       schema:
    #         type: number
    #   tags:
    #     - routes
    #   summary: Обновление данных маршрута
    #   description: Это действие доступно только автору маршрута
    #   security:
    #     - bearerAuth: []
    #   requestBody:
    #     required: true
    #     content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/PatchRoute'
    #   responses:
    #     '200':
    #       description: Успешное обновление маршрута
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/GetRoute'
    #     '401':
    #       description: Невалидный токен
    #     '400':
    #       description: Невалидные данные
    #     '403':
    #       description: Недостаточно прав
    delete:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Удаление маршрута из системы
      description: Это действие доступно только модератору
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление маршрута
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        '403':
          description: Недостаточно прав
  
  /routes/route-points/completed:
    post:
      tags:
        - routes
      summary: Пометить этап маршрута пройденным
      description: Это действие доступно пользователям, которые проходят маршрут
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
         application/json:
           schema:
             $ref: '#/components/schemas/PostRoutePointCompleted'
      responses:
        '200':
          description: Успешное прохождение этапа 
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
  
  /routes/{routeId}/comments:
    get:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
        - name: pageIndex
          in: query
          required: false
          schema:
            type: number
      tags:
        - routes
      summary: Получение списка комментариев к маршруту
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetComments'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Добавление комментария к маршруту
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostComment'
      responses:
        '201':
          description: Успешное добавление комментария
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetComment'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /routes/{routeId}/rating:
    post:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Добавление оценки маршруту 
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRating'
      responses:
        '201':
          description: Рейтинг был успешно добавлен
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /users/{userId}:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение полной информации о пользователе по его идентификатору 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUser'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    patch:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Изменение данных пользователя 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
      responses:
        '200':
          description: Успешное изменение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUser'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Удаление аккаунта пользователя 
      description: Это действие доступно только владельцу аккаунта и модератору
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление аккаунта
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/avatar:
    patch:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Обновление аватара пользователя
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/GetUserAvatar'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/password:
    patch:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Изменение пароля пользователя
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserPassword'
      responses:
        '204':
          description: Успешное изменение пароля
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        '403':
          description: Недостаточно прав
  
  /users/search:
    get:
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Поиск пользователей по полю username
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUsers'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
         
  /users/{userId}/routes:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение списка маршрутов, созданных пользователем 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /users/{userId}/active-route:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение активного маршрута пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Изменение активного маршрута пользователя 
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostActiveRoute'
      responses:
        '200':
          description: Успешное изменение активного маршрута
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        
  /users/{userId}/favorite-routes:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - users
      summary: Получение избранных маршрутов пользователя 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
       - users
      summary: Добавление маршрута в "Избранное" 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFavoriteRoute'
      responses:
        '200':
          description: Успешное добавление маршрута в "Избранное"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/favorite-routes/{routeId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Удаление маршрута из категории "Избранное" 
      description: Это действие доступно только владельцу аккаунта
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление маршрута
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        '403':
          description: Недостаточно прав
         
  /users/{userId}/friends:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - users
      summary: Получение списка друзей пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetFriends'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /users/{userId}/friends/{friendId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: friendId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Удаление пользователя из списка друзей 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление данных
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/friends/requests:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение списка запросов в друзья от других пользователей
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '201':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetFriendsRequests'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Создание запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFriendsRequest'
      responses:
        '201':
          description: Успешное создание запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFriendsRequest'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    put:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Принятие запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFriendsRequest'
      responses:
        '204':
          description: Успешное принятие запроса
          
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/friends/requests/{requestId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: requestId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Отклонение запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное отклонение запроса
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /users/{userId}/achievements:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение списка достижений пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUserAchievements'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /users/{userId}/chats:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение списка чатов пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetChats'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
  
  /chats:
    post:
      tags:
        - chats
      summary: Создание чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChat'
      responses:
        '201':
          description: Успешное создание чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    
  /chats/{chatId}:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Получение полной информации о чате
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
  
  /chats/{chatId}/users:
    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Добавление пользователей в чат
      description: Это действие доступно только создателю чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChatUsers'
      responses:
        '201':
          description: Успешное добавление пользователя в чат
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        '403':
          description: Недостаточно прав
  
  
  /chats/{chatId}/users/{userId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Удаление пользователя из чата 
      description: Это действие доступно только создателю чата
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление пользователя из чата
        '401':
          description: Невалидный токен
        '400':
          description: Невалидные данные
        '403':
          description: Недостаточно прав
  
  /chats/{chatId}/messages:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - chats
      summary: Получение списка сообщений чата
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessages'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Добавление сообщение в чат
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessage'
      responses:
        '200':
          description: Успешное добавление сообщения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessage'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
          
  /chats/{chatId}/activity:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: lastId
          in: query
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Получение выбранного в чате маршрута
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: lastId
          in: query
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Изменение выбранного в чате маршрута
      description: Это действие доступно только владельцу чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChatActivity'
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '400':
          description: Невалидные данные
      

components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # PaginationMeta:
    #   type: object
    #   properties:
    #     prev_page:
    #       type: string
    #       example: "http://localhost:80/endpoint?page=1"
    #     current_page:
    #       type: string
    #       example: "http://localhost:80/endpoint?page=2"
    #     next_page:
    #       type: string
    #       example: "http://localhost:80/endpoint?page=3"
  
    AuthInfo:
      type: object
      properties:
        email:
          type: string
          example: "pochta@gmail.com"
        password:
          type: string
          example: "*******************"
          
    AuthError:
      type: object
      properties:
        error: 
          type: object
          properties:
            email:
              type: string
              example: "Поле email должно быть строкой"
            password:
              type: string
              example: "Поле password должно быть строкой"
              
    AuthSuccess:
      type: object
      properties:
        data:
          type: object
          properties:
            access_token: 
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              
    ShortPlace:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        title:
          type: string
          example: "Парк Ангелов"
        lat:
          type: number
          example: 12345.65
        lon:
          type: number
          example: 98983.34
        rating:
          type: number
          example: 4.5
        image:
          type: object
          properties:
            id:
              type: integer
              example: 34
            path:
              type: string
              example: "images/LKJkljg33POJB123oij.jpeg"
        locality:
          type: object
          properties:
            id:
              type: integer
              example: 60
            title:
              type: string
              example: "Кемерово"
    FullPlace:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        title:
          type: string
          example: "Парк Ангелов"
        lat:
          type: number
          example: 12345.65
        lon:
          type: number
          example: 98983.34
        rating:
          type: number
          example: 4.5
        description:
          type: string
          example: "Одно из прекраснейших мест города Кемерово..."
        images:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 34
              path:
                type: string
                example: "images/LKJkljg33POJB123oij.jpeg"
        locality:
          type: object
          properties:
            id:
              type: integer
              example: 60
            title:
              type: string
              example: "Кемерово"
    
    VeryShortPlace:
      type: object
      properties:
        id:
          type: number
          example: 1
        image:
          type: string
          example: "images/aboba.production.jpeg"
  
    GetPlaces:
      type: object
      properties:
        data:
          type: object
          properties:
            places:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ShortPlace'
                properties:
                  distance:
                    type: number
                    example: 4.5
            
    GetPlace:
      type: object
      properties:
        data:
          type: object
          properties:
            place:
              type: object
              oneOf:
                - $ref: '#/components/schemas/FullPlace'
              properties:
                distance:
                  type: number
                  example: 4.5
    
    PostPlace:
      type: object
      properties:
        title:
          type: string
          example: "Парк Ангелов"
        lat:
          type: number
          example: 12345.65
        lon:
          type: number
          example: 98983.34
        description:
          type: string
          example: "Одно из прекраснейших мест города Кемерово..."
        locality_id:
          type: number
          example: 5
        images:
          type: array
          items:
            type: string
            example: "images/LKJkljg33POJB123oij.jpeg"
      
    Comment:
      type: object
      properties:
        id: 
          type: integer
          example: 55
        comment:
          type: string
          example: "Крутое место"
        created_at:
          type: string
          example: "2023-10-01 11:16:54"
        author:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
    
    PostComment:
      type: object
      properties:
        comment:
          type: string
          example: "Одно из прекраснейших мест города Кемерово..."
            
    GetComments:
      type: object
      properties:
        data:
          type: object
          properties:
            comments:
              type: array
              items:
                oneOf: 
                  - $ref: '#/components/schemas/Comment' 
              
    GetComment:
      type: object
      properties:
        data:
          type: object
          properties:
            comment:
              type: object
              oneOf:
                - $ref: '#/components/schemas/Comment'

    PostRating:
      type: object
      properties:
        rating:
          type: number
          example: 4.5
  
    
    ShortRoute:
      type: object
      properties:
        id: 
          type: number
          example: 5
        title:
          type: string
          example: "Супер маршрут по лесу"
        route_points:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/VeryShortPlace'
        creator: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
            
    FullRoute:
      type: object
      properties:
        id: 
          type: number
          example: 5
        title:
          type: string
          example: "Супер маршрут по лесу"
        route_points:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              index:
                type: number
                example: 1
              is_completed:
                type: boolean
                example: false
              place:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/ShortPlace'
        creator: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
  
    GetRoutes:
      type: object
      properties:
        data:
          type: object
          properties:
            routes:
              type: array
              items:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/ShortRoute'
    
    GetRoute:
      type: object
      properties:
        data:
          type: object
          properties:
            route:
              type: object
              oneOf:
                - $ref: '#/components/schemas/FullRoute'
            
    PostRoute:
      type: object
      properties:
        title:
          type: string
          example: "Супер маршрут по лесу"
        route_points:
          type: array
          items:
            type: object
            properties:
              index:
                type: number
                example: 2
              place_id:
                type: number
                example: 2
    
    PatchRoute:
      type: object
      oneOf:
        - $ref: '#/components/schemas/PostRoute'
    
    PostFavoriteRoute:
      type: object
      properties:
        route_id:
          type: number
          example: 1
    
    PostActiveRoute:
      type: object
      properties:
        route_id:
          type: number
          example: 1
    
    PostRoutePointCompleted:
      type: object
      properties:
        route_id:
          type: number
          example: 1
        route_point_id:
          type: number
          example: 1
    
    ShortUser:
      type: object
      properties:
        id:
          type: integer
          example: 24
        username:
          type: string
          example: "Юрий Константинопольский"
        avatar:
          type: string
          example: "images/default.jpeg"

    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        username:
          type: string
          example: "Aboba"
        avatar:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UserAvatar' 
    
    UserAvatar:
      type: object
      properties:
        path:
          type: string
          example: 'images/avatar1.jpeg'
    
    GetUserAvatar:
      type: object
      properties:
        data:
          type: object
          properties:
            avatar:
              type: object
              oneOf:
                - $ref: '#/components/schemas/UserAvatar'
            
    PostUserPassword:
      type: object
      properties:
        old_password:
          type: string
          example: 'old_password'
        new_password:
          type: string
          example: 'new_password'
    
    GetUser:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              type: object
              oneOf:
                - $ref: '#/components/schemas/User'
    
    GetUsers:
      type: object
      properties:
        data:
          type: object
          properties:
            users:
              type: object
              oneOf:
                - $ref: '#/components/schemas/User'
    
    PatchUser:
      type: object
      properties:
        username:
          type: string
          example: 'vovan1337'
    
    GetFriends:
      type: object
      properties:
        data:
          type: object
          properties:
            friends:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/User'
    
    GetFriendsRequests:
      type: object
      properties:
        data:
          type: object
          properties:
            requests:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ShortUser'
    
    GetFriendsRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            request:
              type: object
              oneOf:
                - $ref: '#/components/schemas/ShortUser'
    
    PostFriendsRequest:
      type: object
      properties:
        friend_id:
          type: number
          example: 1
    
    PutFriendsRequest:
      type: object
      properties:
        request_id:
          type: number
          example: 1
    
    Achievement:
      type: object
      properties:
        id:
          type: number
          example: 5
        title:
          type: string
          example: 'Исследователь'
        description:
          type: string
          example: 'Необходимо пройти 1 маршрут'
        target:
          type: number
          example: 1
        type:
          type: string
          example: 'gold'
        image:
          type: string
          example: '/images/achievement.jpeg'
    
    # GetAchievement:
    #   type: object
    #   properties:
    #     data: 
    #       type: object
    #       oneOf:
    #         - $ref: '#/components/schemas/Achievement'
    
    GetUserAchievements:
      type: object
      properties:
        data:
          type: object
          properties:
            achievements:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Achievement'
                properties:
                  current_progress:
                    type: number
                    example: 0
                  value:
                    type: number
                    example: 5
    
    Message:
      type: object
      properties:
        id: 
          type: integer
          example: 55
        message:
          type: string
          example: "Крутое место"
        created_at:
          type: string
          example: "2023-10-01 11:16:54"
        sender:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
    
    PostMessage:
      type: object
      properties:
        message:
          type: string
          example: 'Это сообщение'
    
    GetMessage:
      type: object
      properties:
        data:
          type: object
          properties:
            message:
              oneOf:
                - $ref: '#/components/schemas/Message'
    
    GetMessages:
      type: object
      properties:
        data:
          type: object
          properties:
            messages:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Message'
    
    ShortChat:
      type: object
      properties:
        id:
          type: number
          example: 1
        title:
          type: string
          example: "Чат для тех, кто любит проходить супер крутой маршрут по лесу"
        last_message:
          type: object
          oneOf:
            - $ref: '#/components/schemas/Message'
    
    FullChat:
      type: object
      properties:
        id:
          type: number
          example: 1
        title:
          type: string
          example: "Чат для тех, кто любит проходить супер крутой маршрут по лесу"
        creator:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
        users:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ShortUser'
        messages:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Message'
        activity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortRoute'
    
    GetChat:
      type: object
      properties:
        data:
          type: object
          properties:
            chat:
              oneOf:
                - $ref: '#/components/schemas/FullChat'
    
    GetChats:
      type: object
      properties:
        data:
          type: object
          properties:
            chats:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ShortChat'
    
    PostChat:
      type: object
      properties:
        creator_id:
          type: number
          example: 1
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 2
        route_id:
          type: number
          example: 5
    
    PostChatUsers:
      type: object
      properties:
        users_id:
          type: array
          items:
            type: number
            example: 1
    
    PostChatActivity:
      type: object
      properties:
        route_id:
          type: number
          example: 1
        
            
