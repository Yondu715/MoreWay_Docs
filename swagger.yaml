openapi: 3.0.3
info:
  title: MoreWay
  version: 1.0.0
servers:
  - url: https://localhost:80/api/v1
tags:
  - name: auth
    description: Регистрация и авторизация
  - name: places
    description: Достопримечательности
  - name: routes
    description: Маршруты
  - name: users
    description: Пользователи
  - name: friends
    description: Друзья
  - name: rating
    description: Рейтинг
  - name: chats
    description: Чаты
  - name: achievements
    description: Достижения

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Авторизация
      description: Авторизация по логину и паролю.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessToken'
        '401':
          description: Неправильный пароль или почта
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
               
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация
      description: Регистрация по логину и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInfo'

      responses:
        '201':
          description: Успешная регистрация
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
                
  /auth/refresh-token:
    post:
      tags:
        - auth
      summary: Обновление токена
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetAccessToken'
        '401':
          description: Невалидный токен
  
  /auth/logout:
    post:
      tags:
        - auth
      summary: Выход из системы
      security:
        - bearerAuth: []
      description: Разлогинить авторизованного пользователя
      responses:
        '204':
          description: Успешный выход из системы
        '401':
          description: Невалидный токен
  
  /auth/me:
    get:
      tags:
        - auth
      summary: Получение информации об авторизованном пользователе
      security:
        - bearerAuth: []
      description: Получение информации из токена
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetAuthUser'
        '401':
          description: Невалидный токен
  
  /auth/password/forgot:
    post:
      tags:
        - auth
      summary: Запрос кода для восстановления пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUser'
      responses:
        '200':
          description: Успешное получение данных
        '404':
          description: Пользователь не найден
          
  /auth/password/verify-code:
    post:
      tags:
        - auth
      summary: Проверка кода для восстановления пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeResetPassword'
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/ValidateResetPasswordCode'
        '404':
          description: Пользователь не найден
          
  /auth/password/reset:
    put:
      tags:
        - auth
      summary: Сброс пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
      responses:
        '200':
          description: Успешное получение данных
        '404':
          description: Пользователь не найден
  
  /places:
    get:
      parameters:
        - name: lat
          in: query
          required: true
          schema:
            type: number
            example: 55.123123
        - name: lon
          in: query
          required: true
          schema:
            type: number
            example: 55.123123
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            example: eyJwbGFjZXMuaWQiOjMsIl
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: [distance, comments, rating, time]
        - name: sortType
          in: query
          required: false
          schema:
            type: string
            example: [1, -1]
        - name: search
          in: query
          required: false
          schema:
            type: string
            example: моск
        - name: locality
          in: query
          required: false
          schema:
            type: string
            example: Кемерово,Яя
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: Парк,Площадь
        - name: distance
          in: query
          required: false
          schema:
            type: string
            example: 3-1000
        - name: rating
          in: query
          required: false
          schema:
            type: string
            example: 1-5
      tags:
        - places
      summary: Получение списка всех достопримечательностей
      security:
        - bearerAuth: [] 
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlaces'
        '401':
          description: Невалидный токен
          
  /places/{placeId}:
    get:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
        - name: lat
          in: query
          required: true
          schema:
            type: number
        - name: lon
          in: query
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Получение подробной информации о достопримечательности по ее идентификатору
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetPlace'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
          
  /places/{placeId}/reviews:
    get:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - places
      summary: Получение списка комментариев к достопримечательности
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetReviews'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'

    post:
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - places
      summary: Добавление комментария к достопримечательности
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReview'
      responses:
        '201':
          description: Успешное добавление комментария
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetReview'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
          
  /routes:
    get:
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: number
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: number
      tags:
        - routes
      summary: Получение списка всех маршрутов
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
    post:
      tags:
        - routes
      summary: Создание маршрута 
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRoute'
      responses:
        '201':
          description: Успешное создание маршрута
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
  
  /routes/{routeId}:
    get:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Получение полной информации о маршруте по его идентификатору
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
  
  /routes/route-points/status:
    patch:
      tags:
        - routes
      summary: Пометить этап маршрута пройденным
      description: Это действие доступно пользователям, которые проходят маршрут
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
         application/json:
           schema:
             $ref: '#/components/schemas/PatchRoutePointStatus'
      responses:
        '200':
          description: Успешное прохождение этапа 
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
  
  /routes/{routeId}/reviews:
    get:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - routes
      summary: Получение списка комментариев к маршруту
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
               $ref: '#/components/schemas/GetReviews'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
    post:
      parameters:
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Добавление комментария к маршруту
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReview'
      responses:
        '201':
          description: Успешное добавление комментария
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetReview'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'

  /users:
    get:
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      tags:
        - users
      summary: Поиск пользователей
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUsers'
        '401':
          description: Невалидный токен
  
  /users/{userId}:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Получение полной информации о пользователе по его идентификатору 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUser'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса

    patch:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Изменение данных пользователя 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
      responses:
        '200':
          description: Успешное изменение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUser'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Удаление аккаунта пользователя 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление аккаунта
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/avatar:
    put:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Обновление аватара пользователя
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Успешное получение данных
          content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/GetUser'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
  
  /users/{userId}/password:
    put:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - users
      summary: Изменение пароля пользователя
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserPassword'
      responses:
        '204':
          description: Успешное изменение пароля
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
         
  /users/{userId}/routes:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Получение списка маршрутов, созданных пользователем 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса

  /users/{userId}/routes/{routeId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Удаление маршрута из системы
      description: Это действие доступно только создателю маршрута
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление маршрута
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/active-route:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Получение активного маршрута пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса

    put:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Изменение активного маршрута пользователя 
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutActiveRoute'
      responses:
        '200':
          description: Успешное изменение активного маршрута
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
        
  /users/{userId}/favorite-routes:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - routes
      summary: Получение избранных маршрутов пользователя 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRoutes'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса

    post:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
       - routes
      summary: Добавление маршрута в категорию "Избранное" 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFavoriteRoute'
      responses:
        '200':
          description: Успешное добавление маршрута в "Избранное"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
  
  /users/{userId}/favorite-routes/{routeId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: routeId
          in: path
          required: true
          schema:
            type: number
      tags:
        - routes
      summary: Удаление маршрута из категории "Избранное" 
      description: Это действие доступно только владельцу аккаунта
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление маршрута
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/achievements:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - achievements
      summary: Получение списка достижений пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetUserAchievements'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/chats:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Получение списка чатов пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetChats'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/friends:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - friends
      summary: Получение списка друзей пользователя 
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetFriends'
        '401':
          description: Невалидный токен
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/friends/{friendId}:
    delete:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
        - name: friendId
          in: path
          required: true
          schema:
            type: number
      tags:
        - friends
      summary: Удаление пользователя из списка друзей 
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление данных
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /users/{userId}/friends/requests:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      tags:
        - friends
      summary: Получение списка запросов в друзья от других пользователей
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '201':
          description: Успешное получение данных
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/GetFriendsRequests'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
          
  /friends/requests:
    post:
      tags:
        - friends
      summary: Создание запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFriendsRequest'
      responses:
        '201':
          description: Успешное создание запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFriendsRequest'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
    put:
      tags:
        - friends
      summary: Принятие запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFriendsRequest'
      responses:
        '204':
          description: Успешное принятие запроса
          
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
  
  /friends/requests/{requestId}:
    delete:
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: number
      tags:
        - friends
      summary: Отклонение запроса на добавление в друзья
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное отклонение запроса
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /rating:
    get:
      tags:
        - rating
      summary: Получение рейтинга пользователей
      description: Это действие доступно только владельцу аккаунта
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRating'
        '401':
          description: Невалидный токен
  
  /chats:
    post:
      tags:
        - chats
      summary: Создание чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChat'
      responses:
        '201':
          description: Успешное создание чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
    
  /chats/{chatId}:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Получение полной информации о чате
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /chats/{chatId}/members:
    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Добавление пользователей в чат
      description: Это действие доступно только создателю чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChatUsers'
      responses:
        '201':
          description: Успешное добавление пользователя в чат
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/GetChat'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
  
  
  /chats/{chatId}/members/{memberId}:
    delete:
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: number
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Удаление пользователя из чата 
      description: Это действие доступно только создателю чата
      security:
       - bearerAuth: []
      responses:
        '204':
          description: Успешное удаление пользователя из чата
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
  
  /chats/{chatId}/messages:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: cursor
          in: query
          required: false
          schema:
            type: number
      tags:
        - chats
      summary: Получение списка сообщений чата
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessages'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса

    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Добавление сообщение в чат
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessage'
      responses:
        '200':
          description: Успешное добавление сообщения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessage'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'
          
  /chats/{chatId}/activity:
    get:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: lastId
          in: query
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Получение выбранного в чате маршрута
      description: Это действие доступно только пользователю чата
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса

    post:
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
        - name: lastId
          in: query
          required: true
          schema:
            type: number
      tags:
        - chats
      summary: Изменение выбранного в чате маршрута
      description: Это действие доступно только владельцу чата
      security:
       - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChatActivity'
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoute'
        '401':
          description: Невалидный токен
        '403':
          description: Недостаточно прав
        '404':
          description: В системе нет такого ресурса
        '422':
          description: Невалидные данные
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error422'

components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:

    AuthInfo:
      type: object
      properties:
        email:
          type: string
          example: "pochta@gmail.com"
        password:
          type: string
          example: "*******************"
    
    RegisterInfo:
      type: object
      properties:
        name:
          type: string
          example: "user"
        email:
          type: string
          example: "pochta@gmail.com"
        password:
          type: string
          example: "*******************"
          
    Error422:
      type: object
      properties:
        errors: 
          type: object
          properties:
            field1:
              type: string
              example: "Поле field1 должно быть строкой"
            field2:
              type: string
              example: "Поле field2 должно быть строкой"
    
    GetAccessToken:
      type: object
      properties:
        data:
          type: object
          properties:
            accessToken: 
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              
    EmailUser:
      type: object
      properties:
        email: 
          type: string
          example: "test@test.test"
          
    VerifyCodeResetPassword:
      type: object
      properties:
        email: 
          type: string
          example: "test@test.test"
        code: 
          type: string
          example: "1234"
    
    ResetPassword:
      type: object
      properties:
        email: 
          type: string
          example: "test@test.test"
        token: 
          type: string
          example: "$2y$12$vgjvczwiL6.N/gzk7PHI/uaRfL.3RHbPrmYuqaRb1Ut6iOTsKZ0hK"
        password:
          type: string
          example: "123123123"
              
    ValidateResetPasswordCode:
      type: object
      properties:
        data:
          type: object
          properties:
            resetPasswordToken: 
              type: string
              example: "$2y$12$vgjvczwiL6.N/gzk7PHI/uaRfL.3RHbPrmYuqaRb1Ut6iOTsKZ0hK"
              
    ShortPlace:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        name:
          type: string
          example: "Парк Ангелов"
        lat:
          type: number
          example: 12345.65
        lon:
          type: number
          example: 98983.34
        rating:
          type: number
          example: 4.5
        image:
          type: object
          properties:
            id:
              type: integer
              example: 34
            path:
              type: string
              example: "images/LKJkljg33POJB123oij.jpeg"
        locality:
          type: object
          properties:
            id:
              type: integer
              example: 60
            name:
              type: string
              example: "Кемерово"
    FullPlace:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        name:
          type: string
          example: "Парк Ангелов"
        lat:
          type: number
          example: 12345.65
        lon:
          type: number
          example: 98983.34
        rating:
          type: number
          example: 4.5
        description:
          type: string
          example: "Одно из прекраснейших мест города Кемерово..."
        images:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 34
              path:
                type: string
                example: "images/LKJkljg33POJB123oij.jpeg"
        locality:
          type: object
          properties:
            id:
              type: integer
              example: 60
            name:
              type: string
              example: "Кемерово"
    
    VeryShortPlace:
      type: object
      properties:
        id:
          type: number
          example: 1
        image:
          type: string
          example: "images/aboba.production.jpeg"
  
    GetPlaces:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ShortPlace'
            properties:
              distance:
                type: number
                example: 4.5
        meta:
          type: object
          properties:
            cursor:
              type: number
              example: 1
            
    GetPlace:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/FullPlace'
          properties:
            distance:
              type: number
              example: 4.5
      
    Review:
      type: object
      properties:
        id: 
          type: integer
          example: 55
        text:
          type: string
          example: "Крутое место"
        rating:
          type: number
          example: 5
        createdAt:
          type: string
          example: "2023-10-01 11:16:54"
        author:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
    
    PostReview:
      type: object
      properties:
        userId:
          type: number
          example: 1
        text:
          type: string
          example: "Одно из прекраснейших мест города Кемерово..."
        rating:
          type: number
          example: 5
            
    GetReviews:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf: 
              - $ref: '#/components/schemas/Review' 
        meta:
          type: object
          properties:
            cursor:
              type: number
              example: 1
              
    GetReview:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/Review'
    
    ShortRoute:
      type: object
      properties:
        id: 
          type: number
          example: 5
        name:
          type: string
          example: "Супер маршрут по лесу"
        routePoints:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/VeryShortPlace'
        creator: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
            
    FullRoute:
      type: object
      properties:
        id: 
          type: number
          example: 5
        name:
          type: string
          example: "Супер маршрут по лесу"
        routePoints:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              index:
                type: number
                example: 1
              isCompleted:
                type: boolean
                example: false
              place:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/ShortPlace'
        creator: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
  
    GetRoutes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/ShortRoute'
        meta:
          type: object
          properties:
            cursor:
              type: number
              example: 1
    
    GetRoute:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/FullRoute'
            
    PostRoute:
      type: object
      properties:
        name:
          type: string
          example: "Супер маршрут по лесу"
        creatorId:
          type: number
          example: 1
        routePoints:
          type: array
          items:
            type: object
            properties:
              index:
                type: number
                example: 2
              placeId:
                type: number
                example: 2
    
    PostFavoriteRoute:
      type: object
      properties:
        routeId:
          type: number
          example: 1
    
    PutActiveRoute:
      type: object
      properties:
        routeId:
          type: number
          example: 1
    
    PatchRoutePointStatus:
      type: object
      properties:
        userId:
          type: number
          example: 1
        routeId:
          type: number
          example: 1
        routePointId:
          type: number
          example: 1
    
    ShortUser:
      type: object
      properties:
        id:
          type: integer
          example: 24
        name:
          type: string
          example: "Юрий Константинопольский"
        avatar:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UserAvatar'

    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Aboba"
        avatar:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UserAvatar' 
        score:
          type: integer
          example: 50
    
    UserAvatar:
      type: string
      example: 'images/avatar1.jpeg'
    
    GetUserAvatar:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UserAvatar'
            
    PostUserPassword:
      type: object
      properties:
        oldPassword:
          type: string
          example: 'oldPassword'
        newPassword:
          type: string
          example: 'newPassword'
    
    FullUser:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Aboba"
        avatar:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UserAvatar'
        email:
          type: string
          example: 'aboba@aboba.ru'
        password:
          type: string
          example: 'abober'
    
    GetAuthUser:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/FullUser'

    
    GetUser:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/User'
    
    GetUsers:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/User'
    
    PatchUser:
      type: object
      properties:
        name:
          type: string
          example: 'vovan1337'
    
    GetFriends:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/User'
    
    GetFriendsRequests:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ShortUser'
    
    GetFriendsRequest:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
    
    PostFriendsRequest:
      type: object
      properties:
        userId:
          type: number
          example: 2
        friendId:
          type: number
          example: 1
    
    PutFriendsRequest:
      type: object
      properties:
        requestId:
          type: number
          example: 1
    
    Achievement:
      type: object
      properties:
        id:
          type: number
          example: 5
        name:
          type: string
          example: 'Исследователь'
        description:
          type: string
          example: 'Необходимо пройти 1 маршрут'
        target:
          type: number
          example: 1
        type:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: 'gold'
            value:
              type: integer
              example: 5
        image:
          type: string
          example: '/images/achievement.jpeg'
    
    GetUserAchievements:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Achievement'
            properties:
              currentProgress:
                type: number
                example: 0
    
    GetRating:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              user:
                oneOf:
                  - $ref: '#/components/schemas/ShortUser'
              place:
                type: number
                example: 1
    
    Message:
      type: object
      properties:
        id: 
          type: integer
          example: 55
        message:
          type: string
          example: "Крутое место"
        createdAt:
          type: string
          example: "2023-10-01 11:16:54"
        sender:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
    
    PostMessage:
      type: object
      properties:
        message:
          type: string
          example: 'Это сообщение'
    
    GetMessage:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/Message'
    
    GetMessages:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Message'
    
    ShortChat:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Чат для тех, кто любит проходить супер крутой маршрут по лесу"
        lastMessage:
          type: object
          oneOf:
            - $ref: '#/components/schemas/Message'
    
    FullChat:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Чат для тех, кто любит проходить супер крутой маршрут по лесу"
        creator:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortUser'
        members:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ShortUser'
        messages:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Message'
        activity:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ShortRoute'
    
    GetChat:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/FullChat'
    
    GetChats:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ShortChat'
    
    PostChat:
      type: object
      properties:
        creatorId:
          type: number
          example: 1
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 2
        routeId:
          type: number
          example: 5
    
    PostChatUsers:
      type: object
      properties:
        usersId:
          type: array
          items:
            type: number
            example: 1
    
    PostChatActivity:
      type: object
      properties:
        routeId:
          type: number
          example: 1
        
            